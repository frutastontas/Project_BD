PRAGMA foreign_keys = ON;

DROP TABLE IF EXISTS VEÍCULO;
CREATE TABLE VEÍCULO
(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    CONSUMO INTEGER NOT NULL,
    COR TEXT NOT NULL,
    ANO DATE NOT NULL,
    PESO INTEGER NOT NULL,
    PREÇO INTEGER NOT NULL,
    TRAÇÃO TEXT NOT NULL,
    NÚMERO_DE_ASSENTOS INTEGER NOT NULL,
    ESTADO TEXT NOT NULL,
    TOP_SPEED INTEGER NOT NULL,
    DESCRIÇÃO TEXT NOT NULL,
    SÉRIE INTEGER,
    ID_VENDEDOR INTEGER,
    FOREIGN KEY (SÉRIE) REFERENCES MOTOR(NÚMERO_SÉRIE) ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY (ID_VENDEDOR) REFERENCES VENDEDOR(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS MOTOR;
CREATE TABLE MOTOR
(
    NÚMERO_SÉRIE INTEGER PRIMARY KEY AUTOINCREMENT,
    NOME TEXT NOT NULL,
    CILINDRADA INTEGER NOT NULL,
    NÚMERO_DE_CILINDROS INTEGER NOT NULL,
    NÚMERO_DE_VÁLVULAS INTEGER NOT NULL,
    ASPIRAÇÃO TEXT NOT NULL,
    BINÁRIO INTEGER NOT NULL,
    POTÊNCIA INTEGER NOT NULL,
    CAIXA_DE_VELOCIDADES TEXT NOT NULL
);

DROP TABLE IF EXISTS COMBUSTÍVEL;
CREATE TABLE COMBUSTÍVEL 
(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    TIPO TEXT NOT NULL
);

DROP TABLE IF EXISTS FUNCIONA_A;
CREATE TABLE FUNCIONA_A
(
    ID_VEÍCULO INTEGER,
    ID_COMBUSTÍVEL INTEGER,
    PRIMARY KEY (ID_VEÍCULO,ID_COMBUSTÍVEL),
    FOREIGN KEY (ID_VEÍCULO) REFERENCES VEÍCULO(ID) ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY (ID_COMBUSTÍVEL) REFERENCES COMBUSTÍVEL(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS UTILIZADOR;
CREATE TABLE UTILIZADOR
(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    EMAIL TEXT NOT NULL,
    HASH_PALAVRA_PASSE INTEGER NOT NULL,
    USERNAME TEXT NOT NULL UNIQUE,
    PAÍS TEXT NOT NULL,
    MORADA TEXT NOT NULL
);

DROP TABLE IF EXISTS CLIENTE;
CREATE TABLE CLIENTE
(
    ID INTEGER PRIMARY KEY,
    PREFERÊNCIAS TEXT,
    FOREIGN KEY (ID) REFERENCES UTILIZADOR(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS VENDEDOR;
CREATE TABLE VENDEDOR
(
    ID INTEGER PRIMARY KEY,
    HISTÓRICO TEXT,
    MARCA_ASSOCIADA TEXT,
    FOREIGN KEY (ID) REFERENCES UTILIZADOR(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS ANÚNCIO;
CREATE TABLE ANÚNCIO
(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    DATA DATE NOT NULL,
    ID_VEÍCULO INTEGER UNIQUE,
    ID_VENDEDOR INTEGER,
    FOREIGN KEY (ID_VEÍCULO) REFERENCES VEÍCULO(ID) ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY (ID_VENDEDOR) REFERENCES VENDEDOR(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS INTERAGIU;
CREATE TABLE INTERAGIU (
    ID_ANÚNCIO INTEGER,
    ID_CLIENTE INTEGER,
    PRIMARY KEY (ID_ANÚNCIO, ID_CLIENTE),
    FOREIGN KEY (ID_ANÚNCIO) REFERENCES ANÚNCIO(ID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS MARCA;
CREATE TABLE MARCA
(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NOME TEXT NOT NULL,
    PAÍS_ORIGEM TEXT NOT NULL,
    ID_VENDEDOR INTEGER,
    FOREIGN KEY (ID_VENDEDOR) REFERENCES VENDEDOR(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS CARRO;
CREATE TABLE CARRO
(
    ID INTEGER PRIMARY KEY,
    CATEGORIA TEXT NOT NULL,
    NÚMERO_PORTAS INTEGER NOT NULL,
    FOREIGN KEY (ID) REFERENCES VEÍCULO(ID) ON UPDATE CASCADE ON DELETE SET NULL,
    CONSTRAINT Número_portas CHECK(NÚMERO_PORTAS>1)
);

DROP TABLE IF EXISTS MOTOCICLO;
CREATE TABLE MOTOCICLO
(
    ID INTEGER PRIMARY KEY,
    CATEGORIA TEXT NOT NULL,
    FOREIGN KEY (ID) REFERENCES VEÍCULO(ID) ON UPDATE CASCADE ON DELETE SET NULL
);

DROP TABLE IF EXISTS MODELO;
CREATE TABLE MODELO
(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NOME TEXT NOT NULL,
    DATA_LANÇAMENTO DATE NOT NULL,
    VARIANTE TEXT NOT NULL,
    ID_CARRO  DEFAULT NULL,
    ID_MOTOCICLO INTEGER DEFAULT NULL,
    ID_MARCA INTEGER,
    FOREIGN KEY (ID_CARRO) REFERENCES CARRO(ID) ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY (ID_MOTOCICLO) REFERENCES MOTOCICLO(ID) ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID) ON UPDATE CASCADE ON DELETE SET NULL
);
